import React, { useState } from 'react';
import { Helmet } from 'react-helmet';
import './JobApplicationPage.css';
import { sendJobApplicationEmail } from '../services/jobApplicationService';
import { getJobMatchContext, buildDefaultResumeContext } from '../services/contextBuilder';
import { trackJobApplicationSubmit } from '../components/Analytics';
import SEO from '../components/SEO';

const JobApplicationPage = () => {
  const [jobInfo, setJobInfo] = useState(getJobMatchContext());
  const [resumeData, setResumeData] = useState(buildDefaultResumeContext());
  const [email, setEmail] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [error, setError] = useState('');
  const [success, setSuccess] = useState(false);

  const handleApply = async (event) => {
    event.preventDefault();
    if (!email) {
      setError('Please provide the email you want to use for submitting this job application.');
      return;
    }

    setIsSubmitting(true);
    setError('');

    try {
      await sendJobApplicationEmail({
        job: jobInfo,
        resume: resumeData,
        email,
      });
      setSuccess(true);
      trackJobApplicationSubmit(jobInfo?.job_title, jobInfo?.company_name);
    } catch (err) {
      console.error('Failed to send job application', err);
      setError('We could not send your application. Please try again later.');
    } finally {
      setIsSubmitting(false);
    }
  };

  if (!jobInfo) {
    return (
      <div className="job-application-page">
        <SEO
          title="Apply to Matched Jobs | HiHired Job Application Preview"
          description="Preview the job application package generated by HiHired before you submit. Confirm job details, resume content, and follow tailored next steps."
          canonical="https://hihired.org/job-application"
          keywords="job application preview, resume submission, job matches, hihired"
        />
        <div className="job-application-empty">
          <h1>No job selected</h1>
          <p>Please return to your matches and select a job to view the application details.</p>
        </div>
      </div>
    );
  }

  return (
    <div className="job-application-page">
      <SEO
        title={`${jobInfo.job_title || 'Job'} Application Preview | HiHired`}
        description={`Review the tailored resume and application details for ${jobInfo.job_title || 'this role'} at ${jobInfo.company_name || 'the selected company'}.`}
        canonical={`https://hihired.org/job-application${jobInfo?.job_id ? `?job=${jobInfo.job_id}` : ''}`}
        keywords="job application preview, resume submission, job matches, hihired"
      />
      <Helmet>
        <meta name="robots" content="noindex, nofollow" />
      </Helmet>

      <div className="job-application-header">
        <h1>Application Preview</h1>
        <p>Review your tailored application before submitting to the employer.</p>
      </div>

      <div className="job-application-content">
        <section className="job-application-card">
          <h2>Job Details</h2>
          <div className="detail-row">
            <span className="detail-label">Job Title</span>
            <span>{jobInfo.job_title}</span>
          </div>
          <div className="detail-row">
            <span className="detail-label">Company</span>
            <span>{jobInfo.company_name}</span>
          </div>
          <div className="detail-row">
            <span className="detail-label">Location</span>
            <span>{jobInfo.location || 'Remote'}</span>
          </div>
          <div className="detail-row">
            <span className="detail-label">Compensation</span>
            <span>
              {jobInfo.salary_min && jobInfo.salary_max
                ? `$${jobInfo.salary_min.toLocaleString()} - $${jobInfo.salary_max.toLocaleString()}`
                : 'Not specified'}
            </span>
          </div>
        </section>

        <section className="job-application-card">
          <h2>Application Materials</h2>
          <div className="job-application-resume-preview">
            <h3>Tailored Resume Highlights</h3>
            <ul>
              {resumeData.experiences.slice(0, 3).map((exp, index) => (
                <li key={index}>
                  <strong>{exp.title} @ {exp.company}</strong>
                  <p>{exp.summary}</p>
                </li>
              ))}
            </ul>
          </div>

          <div className="job-application-cover-letter">
            <h3>Cover Letter (Optional)</h3>
            <p>Add a custom cover letter to make your application stand out.</p>
          </div>
        </section>

        <section className="job-application-card">
          <h2>Submit Application</h2>
          <form onSubmit={handleApply}>
            <label htmlFor="application-email">
              Send application package to this email
            </label>
            <input
              id="application-email"
              type="email"
              value={email}
              onChange={(event) => setEmail(event.target.value)}
              placeholder="you@example.com"
              required
            />
            {error && <div className="job-application-error">{error}</div>}
            {success && (
              <div className="job-application-success">
                Application sent! Check your email for confirmation.
              </div>
            )}
            <button
              type="submit"
              className="job-application-submit"
              disabled={isSubmitting}
            >
              {isSubmitting ? 'Sendingâ€¦' : 'Send Application Package'}
            </button>
          </form>
        </section>
      </div>
    </div>
  );
};

export default JobApplicationPage;
